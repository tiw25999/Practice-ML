from docx import Document

# สร้างเอกสารใหม่
doc = Document()
doc.add_heading('Air Traffic Clustering', 0)

doc.add_heading('การอธิบายโค้ดอย่างละเอียดตามโจทย์ที่ให้', level=1)

# เพิ่มเนื้อหา
doc.add_heading('1. การนำเข้าข้อมูลและการตรวจสอบข้อมูลเบื้องต้น', level=2)
doc.add_paragraph(
    """
ในส่วนนี้จะเริ่มจากการนำเข้าข้อมูลจากไฟล์ Air_Traffic_Passenger_Statistics.csv และแสดงข้อมูลตัวอย่างเบื้องต้น รวมถึงทำการตรวจสอบสถิติของข้อมูล เช่น ค่าเฉลี่ย ค่าเบี่ยงเบนมาตรฐาน และอื่นๆ เพื่อให้เราเข้าใจโครงสร้างข้อมูลมากขึ้น
"""
)

doc.add_heading('2. การเตรียมข้อมูล (Preprocessing)', level=2)
doc.add_paragraph(
    """
ในขั้นตอนนี้จะเริ่มจากการลบคอลัมน์ที่ไม่จำเป็น เช่น 'Activity Period' ตรวจสอบข้อมูลที่ขาดหาย และลบแถวที่มีข้อมูลขาดหายออกเพื่อให้ข้อมูลที่ใช้ไม่มีช่องว่าง
"""
)

doc.add_heading('3. การจัดการข้อมูลเชิงหมวดหมู่ (Categorical Data)', level=2)
doc.add_paragraph(
    """
ใช้ LabelEncoder เพื่อแปลงข้อมูลเชิงหมวดหมู่ (เช่น ชื่อสายการบิน) ให้เป็นตัวเลข ซึ่งเป็นขั้นตอนสำคัญในการเตรียมข้อมูลสำหรับการทำ Clustering เนื่องจากอัลกอริธึมที่ใช้ต้องการข้อมูลในรูปแบบตัวเลขเท่านั้น
"""
)

doc.add_heading('4. การปรับมาตรฐานข้อมูล (Standardization)', level=2)
doc.add_paragraph(
    """
ใช้ StandardScaler เพื่อปรับมาตรฐานข้อมูล ทำให้ค่าต่างๆ ในแต่ละคอลัมน์มีค่าเฉลี่ยเป็นศูนย์และค่าเบี่ยงเบนมาตรฐานเป็นหนึ่ง ซึ่งจะช่วยให้อัลกอริธึมสามารถแบ่งกลุ่มได้อย่างมีประสิทธิภาพมากขึ้น
"""
)

doc.add_heading('5. การแบ่งกลุ่มด้วย K-means Clustering', level=2)
doc.add_paragraph(
    """
ในขั้นตอนนี้เราจะใช้โมเดล K-means โดยกำหนดจำนวนกลุ่มเป็น 3 (n_clusters=3) จากนั้นทำการฝึกโมเดลกับข้อมูลที่ผ่านการปรับมาตรฐานแล้ว และเพิ่มคอลัมน์ 'cluster' ใน DataFrame เพื่อเก็บผลการแบ่งกลุ่ม สุดท้ายจะประเมินคุณภาพการแบ่งกลุ่มด้วยค่า Silhouette Score
"""
)

doc.add_heading('6. การแบ่งกลุ่มด้วย Hierarchical Clustering', level=2)
doc.add_paragraph(
    """
ใช้ AgglomerativeClustering ซึ่งเป็นวิธีการแบ่งกลุ่มแบบ Hierarchical โดยกำหนดจำนวนกลุ่มเป็น 3 เช่นกัน จากนั้นจะประเมินผลการแบ่งกลุ่มด้วย Silhouette Score เหมือนกับ K-means
"""
)

doc.add_heading('7. การแบ่งกลุ่มด้วย DBSCAN', level=2)
doc.add_paragraph(
    """
ใช้ DBSCAN ซึ่งเป็นวิธีการแบ่งกลุ่มที่ไม่ต้องกำหนดจำนวนกลุ่มล่วงหน้า โดยใช้ค่า eps และ min_samples ในการควบคุมผลลัพธ์ จากนั้นจะประเมินการแบ่งกลุ่มด้วย Silhouette Score แต่เนื่องจาก DBSCAN จะแบ่งกลุ่มตามความหนาแน่นของข้อมูล ผลลัพธ์การประเมินด้วย Silhouette Score อาจไม่เหมาะสมหาก DBSCAN สร้างกลุ่มที่มีแค่กลุ่มเดียว
"""
)

doc.add_heading('8. การลดมิติและการแสดงผลลัพธ์การแบ่งกลุ่ม', level=2)
doc.add_paragraph(
    """
ในขั้นตอนนี้เราจะใช้ PCA เพื่อลดมิติข้อมูลจากหลายมิติให้เหลือเพียง 2 มิติ จากนั้นจะแสดงผลลัพธ์การแบ่งกลุ่มในรูปแบบกราฟกระจาย (Scatter Plot) โดยใช้สีเพื่อแสดงกลุ่มที่ได้จาก K-means Clustering และ Hierarchical Clustering
"""
)

# บันทึกเอกสารเป็นไฟล์ Word
doc.save('Air_Traffic_Clustering_Explanation.docx')
